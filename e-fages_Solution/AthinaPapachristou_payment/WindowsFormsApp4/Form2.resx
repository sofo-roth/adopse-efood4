<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>